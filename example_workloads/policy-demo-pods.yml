# adapted from https://docs.projectcalico.org/getting-started/windows-calico/demo

apiVersion: v1
kind: Namespace
metadata:
  name: calico-demo

---

# Linux "client"
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: linux-client
  name: linux-client
  namespace: calico-demo
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - sleep 360000
    image: busybox:1.28
    imagePullPolicy: Always
    name: linux-client
  nodeSelector:
    kubernetes.io/os: linux

---

# Linux "server"
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: linux-server
  name: linux-server
  namespace: calico-demo
spec:
  containers:
  - name: linux-server
    image: nginx:1.8
    ports:
    - containerPort: 80
  nodeSelector:
    kubernetes.io/os: linux

---

# Windows "client"
apiVersion: v1
kind: Pod
metadata:
  name: windows-client
  namespace: calico-demo
  labels:
    app: windows-client
spec:
  containers:
  - name: windows-client
    image: mcr.microsoft.com/windows/servercore:1903
    args:
    - powershell.exe
    - -Command
    - "Start-Sleep 360000"
    imagePullPolicy: IfNotPresent
  nodeSelector:
    kubernetes.io/os: windows

---

# Windows "server"
apiVersion: v1
kind: Pod
metadata:
  name: windows-server
  namespace: calico-demo
  labels:
    app: windows-server
spec:
  containers:
  - name: windows-server
    ports:
    - containerPort: 80
    image: mcr.microsoft.com/windows/servercore:1903
    command:
    - powershell.exe
    - -command
    - "<#code used from https://gist.github.com/wagnerandrade/5424431#> ; $$listener = New-Object System.Net.HttpListener ; $$listener.Prefixes.Add('http://*:80/') ; $$listener.Start() ; $$callerCounts = @{} ; Write-Host('Listening at http://*:80/') ; while ($$listener.IsListening) { ;$$context = $$listener.GetContext() ;$$requestUrl = $$context.Request.Url ;$$clientIP = $$context.Request.RemoteEndPoint.Address ;$$response = $$context.Response ;Write-Host '' ;Write-Host('> {0}' -f $$requestUrl) ;  ;$$count = 1 ;$$k=$$callerCounts.Get_Item($$clientIP) ;if ($$k -ne $$null) { $$count += $$k } ;$$callerCounts.Set_Item($$clientIP, $$count) ;$$ip=(Get-NetAdapter | Get-NetIpAddress); $$header='<html><body><H1>Windows Container Web Server</H1>' ;$$callerCountsString='' ;$$callerCounts.Keys | % { $$callerCountsString+='<p>IP {0} callerCount {1} ' -f $$ip[1].IPAddress,$$callerCounts.Item($$_) } ;$$footer='</body></html>' ;$$content='{0}{1}{2}' -f $$header,$$callerCountsString,$$footer ;Write-Output $$content ;$$buffer = [System.Text.Encoding]::UTF8.GetBytes($$content) ;$$response.ContentLength64 = $$buffer.Length ;$$response.OutputStream.Write($$buffer, 0, $$buffer.Length) ;$$response.Close() ;$$responseStatus = $$response.StatusCode ;Write-Host('< {0}' -f $$responseStatus)  } ; "
  nodeSelector:
    kubernetes.io/os: windows